plugins {
    id 'java'
    id 'org.kordamp.gradle.jandex' version '0.6.0'
    id 'application'
}

group = 'com.distribuida'
version = '1.0-SNAPSHOT'

description = """helidon-quickstart-mp"""

sourceCompatibility = 17
targetCompatibility = 17
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

ext {
    helidonversion = '3.2.2'
    mainClass='io.helidon.microprofile.cdi.Main'
}

repositories {
    mavenCentral()
    mavenLocal()
    gradlePluginPortal()
}

dependencies {
    // import Helidon BOM
    implementation enforcedPlatform("io.helidon:helidon-dependencies:${project.helidonversion}")
    implementation 'io.helidon.microprofile.server:helidon-microprofile-server:4.0.0-M1'
    implementation 'io.helidon.microprofile.bundles:helidon-microprofile'
    implementation 'org.glassfish.jersey.media:jersey-media-json-binding'

    implementation 'io.helidon.microprofile.config:helidon-microprofile-config:4.0.0-M1'
    implementation 'io.helidon.microprofile:helidon-microprofile-fault-tolerance:4.0.0-M1'
    testImplementation 'io.helidon.microprofile.bundles:helidon-microprofile:4.0.0-M1'
    implementation 'io.helidon.microprofile.openapi:helidon-microprofile-openapi:4.0.0-M1'
    implementation 'org.eclipse.microprofile.openapi:microprofile-openapi-api:3.1.1'

    implementation 'io.helidon.integrations.db:helidon-integrations-db-pgsql:4.0.0-M1'
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    runtimeOnly 'io.helidon.integrations.cdi:helidon-integrations-cdi-jpa:4.0.0-M1'
    testImplementation'io.helidon.microprofile.cdi:helidon-microprofile-cdi:3.2.2'
    testImplementation 'io.helidon.integrations.cdi:helidon-integrations-cdi-hibernate:4.0.0-M1'
    implementation 'org.hibernate.orm:hibernate-core:6.3.0.CR1'
    implementation("org.postgresql:postgresql:42.3.1")



    runtimeOnly 'org.jboss:jandex'
    runtimeOnly 'jakarta.activation:jakarta.activation-api'
}

test {
    useJUnitPlatform()
}

// define a custom task to copy all dependencies in the runtime classpath
// into build/libs/libs
// uses built-in Copy
task copyLibs(type: Copy) {
    from configurations.runtimeClasspath
    into 'build/libs/libs'
}

copyLibs.dependsOn jar
assemble.dependsOn copyLibs

jar {
    archiveFileName = "${project.name}.jar"
    manifest {
        attributes ('Main-Class': "${project.mainClass}",
                'Class-Path': configurations.runtimeClasspath.files.collect { "libs/$it.name" }.join(' ')
        )
    }
}

application {
    mainClass.set('io.helidon.microprofile.cdi.Main')
}

task moveBeansXML {
    doLast {
        ant.move file: "${buildDir}/resources/main/META-INF/beans.xml",
                todir: "${buildDir}/classes/java/main/META-INF"
    }
}

compileTestJava.dependsOn jandex
jar.dependsOn jandex
test.dependsOn moveBeansXML
run.dependsOn moveBeansXML